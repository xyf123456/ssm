<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.ssm.dao.UserDao">

    <!-- 查询到某个用户信息 -->
    <!--<select id="selectUserById" resultType="User">-->
    <select id="selectUserById" resultMap="BaseResultMap">
        SELECT
        `u`.*,
        `r`.`id` AS `r_id`,
        `r`.`roleName`
        FROM `smbms_user` AS `u`
        INNER JOIN `smbms_role` `r` ON `u`.`userRole`=`r`.`id`
        <where>
            <if test="uId!=null">
                and `u`.`id` = #{uId}
            </if>
        </where>
    </select>

    <!-- 获取用户信息通过用户编码 -->
    <select id="selectUserByUCode" resultType="User">
        SELECT * FROM `smbms_user`
        <where>
            <if test="userCode!=null and userCode!=''">
                and `userCode` = #{userCode}
            </if>
        </where>
    </select>

    <!-- 通过userCode和userPassword查找到用户 -->
    <select id="selectUser" resultType="User">
        SELECT * FROM `smbms_user`
        <where>
            <if test="userCode!=null and userCode!=''">
                and `userCode` = #{userCode}
            </if>
            <if test="pwd!=null and pwd!=''">
                and `userPassword` = #{pwd}
            </if>
        </where>
    </select>

    <resultMap id="BaseResultMap" type="User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="userCode" property="userCode" jdbcType="VARCHAR"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="userPassword" property="userPassword" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="userRole" property="userRole" jdbcType="BIGINT"/>
        <result column="createdBy" property="createdBy" jdbcType="BIGINT"/>
        <result column="creationDate" property="creationDate" jdbcType="TIMESTAMP"/>
        <result column="modifyBy" property="modifyBy" jdbcType="BIGINT"/>
        <result column="modifyDate" property="modifyDate" jdbcType="TIMESTAMP"/>
        <association property="role" javaType="Role" resultMap="roleList"/>
    </resultMap>
    <resultMap id="roleList" type="Role">
        <result property="id" column="r_id"/>
        <result property="roleName" column="roleName"/>
        <result property="roleCode" column="roleCode"/>
    </resultMap>
    <!-- 查询到全部用户信息 -->
    <select id="selectUsers" resultMap="BaseResultMap">
        SELECT `u`.*,`r`.`roleName`,`r`.`id` AS `r_id`,`r`.`roleCode`
        FROM `smbms_user` AS `u`
        INNER JOIN `smbms_role` AS `r` ON `u`.`userRole` =`r`.`id`
    </select>


    <!--得到模糊查询用户的数量 -->
    <select id="selectUserCount" resultType="Integer">
        SELECT COUNT(1)
        FROM `smbms_user` AS `u`
        INNER JOIN `smbms_role` AS `r` ON `u`.`userRole` =`r`.`id`
        <where>
            <if test="uName!=null and uName!=''">
                and `userName` LIKE CONCAT('%',#{uName},'%')
            </if>
            <if test="uRole!=0">
                OR `userRole` = #{uRole}
            </if>
        </where>
    </select>

    <!-- 得到模糊查询用户分页信息 -->
    <select id="getUserList" resultMap="BaseResultMap">
        SELECT `u`.*,`r`.`roleName`,`r`.`id` AS `r_id`,`r`.`roleCode`
        FROM `smbms_user` AS `u`
        INNER JOIN `smbms_role` AS `r` ON `u`.`userRole` =`r`.`id`
        <where>
            <if test="uName!=null and uName!=''">
                AND `userName` LIKE CONCAT('%',#{uName},'%')
            </if>
            <if test="uRole!=0">
                OR `userRole`=#{uRole}
            </if>
        </where>
        ORDER BY `id`
        Limit #{from},#{pageSize};
    </select>

    <!--插入用户-->
    <insert id="insertUser" parameterType="User">
        INSERT INTO `smbms_user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userCode != null">
                userCode,
            </if>
            <if test="userName != null">
                userName,
            </if>
            <if test="userPassword != null">
                userPassword,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="userRole != null">
                userRole,
            </if>
            <if test="createdBy != null">
                createdBy,
            </if>
            <if test="creationDate != null">
                creationDate,
            </if>
            <if test="modifyBy != null">
                modifyBy,
            </if>
            <if test="modifyDate != null">
                modifyDate
            </if>
            <if test="idPicPath != null">
                idPicPath
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="userRole != null">
                #{userRole,jdbcType=BIGINT},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="creationDate != null">
                #{creationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyBy != null">
                #{modifyBy,jdbcType=BIGINT},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP}
            </if>
            <if test="idPicPath != null">
                #{idPicPath,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>

    <!--删除用户数据-->
    <delete id="deleteUser">
        DELETE from `smbms_user`
        <where>
            <if test="userId !=null">
                AND `id` = #{userId}
            </if>
        </where>
    </delete>

    <!--数据库中修改用户信息 SET(,,,,) VALUES (,,,,);-->
    <update id="updateUser" parameterType="User">
        UPDATE `smbms_user`
        <set>
            <if test="userCode  != null">
                userCode = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                userName = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                userPassword = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="userRole != null">
                userRole = #{userRole,jdbcType=BIGINT},
            </if>
            <if test="createdBy != null">
                createdBy = #{createdBy,jdbcType=BIGINT},
            </if>
            <if test="createdBy != null">
                creationDate = #{createdBy,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyBy != null">
                modifyBy = #{modifyBy,jdbcType=BIGINT},
            </if>
            <if test="modifyDate != null">
                modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <where>
            <if test="id != null">
                `id` = #{id,jdbcType=BIGINT}
            </if>
        </where>
    </update>
</mapper>
